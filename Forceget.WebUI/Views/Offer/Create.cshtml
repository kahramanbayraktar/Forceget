@model Forceget.WebUI.Models.Offer.OfferCreateViewModel

@{
    ViewData["Title"] = "Create Offer";
}

<h1>Offer</h1>

<h4>Create Offer</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Mode" class="control-label"></label>
                <select asp-for="Mode" class="form-control"
                    asp-items="Html.GetEnumSelectList<Domain.Entities.Mode>()">
                        <option value="">...</option>
                </select>
                <span asp-validation-for="Mode" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Movement" class="control-label"></label>
                <select asp-for="Movement" class="form-control"
                        asp-items="Html.GetEnumSelectList<Domain.Entities.MovementType>()">
                    <option value="">...</option>
                </select>
                <span asp-validation-for="Movement" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Incoterm" class="control-label"></label>
                <select asp-for="Incoterm" class="form-control"
                        asp-items="Html.GetEnumSelectList<Domain.Entities.Incoterm>()">
                    <option value="">...</option>
                </select>
                <span asp-validation-for="Incoterm" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Package" class="control-label"></label>
                <select asp-for="Package" class="form-control"
                        asp-items="Html.GetEnumSelectList<Domain.Entities.PackageType>()">
                    <option value="">...</option>
                </select>
                <span asp-validation-for="Package" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Length" class="control-label"></label>
                <select asp-for="Length" class="form-control"
                        asp-items="Html.GetEnumSelectList<Domain.Entities.Length>()">
                    <option value="">...</option>
                </select>
                <span asp-validation-for="Length" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Weight" class="control-label"></label>
                <select asp-for="Weight" class="form-control"
                        asp-items="Html.GetEnumSelectList<Domain.Entities.Weight>()">
                    <option value="">...</option>
                </select>
                <span asp-validation-for="Weight" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Currency" class="control-label"></label>
                <select asp-for="Currency" class="form-control"
                        asp-items="Html.GetEnumSelectList<Domain.Entities.Currency>()">
                    <option value="">...</option>
                </select>
                <span asp-validation-for="Currency" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quote" class="control-label"></label>
                <input asp-for="Quote" class="form-control" />
                <span asp-validation-for="Quote" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
